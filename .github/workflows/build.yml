name: Auto Build
on: [workflow_call]

concurrency: 
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
        root: [magisk, none]
        gapps: [MindTheGapps, none]
        release: [retail]
        compress-format: [7z]
    steps:
      - name: Checkout ♻️
        uses: actions/checkout@v3

      - name: Setup Python 🏭
        uses: actions/setup-python@v4
        with:
          check-latest: true
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: scripts/

      - name: Install Ubuntu Dependencies 🧑‍🏭
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ca-certificates patchelf e2fsprogs aria2 p7zip-full attr unzip xz-utils qemu-utils python3-venv
          version: 1.0
          
      - name: Update Package 👷
        working-directory: scripts
        run: |
          sudo apt-get update -y
          sudo apt-get install -y lzip
          PYTHON_VENV_DIR="$(dirname "$PWD")/python3-env"
          echo "Creating Python3 Virtual Enviroment"
          python3 -m venv "$PYTHON_VENV_DIR" || abort "Failed to create python3 virtual env"
          # shellcheck disable=SC1091
          source "$PYTHON_VENV_DIR/bin/activate" || abort "Failed to activate python3 virtual env"
          python3 -c "import pkg_resources; pkg_resources.require(open('requirements.txt',mode='r'))" &>/dev/null || {
              echo "Installing Python3 dependencies"
              python3 -m pip install --upgrade -r requirements.txt || abort "Failed to install python3 dependencies"
          }
          deactivate 

      - name: Build WSA ${{ matrix.arch }} with GAPPS ${{ matrix.root }} 🏗️
        id: wsa
        run: ./scripts/build.sh --arch ${{ matrix.arch }} --release-type ${{ matrix.release }} --magisk-ver stable --gapps-brand ${{ matrix.gapps }} --root-sol ${{ matrix.root }} --remove-amazon --compress-format ${{ matrix.compress-format }}

      - name: File Checksum ✔️
        id: date
        working-directory: output
        run: |
          echo "date=$(date +'v%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "checksum=$(sha256sum '${{ steps.wsa.outputs.artifact }}.${{ matrix.compress-format }}')" >> $GITHUB_OUTPUT

      - name: Update build to release 🤌
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: output/${{ steps.wsa.outputs.artifact }}.${{ matrix.compress-format }}
          fail_on_unmatched_files: true
          append_body: true
          tag_name: ${{ steps.date.outputs.date }}
          body: ${{ steps.date.outputs.checksum }}

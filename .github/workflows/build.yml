name: Auto Build function (Use for call only)
on:
 workflow_call:
    inputs:
      arch:
        type: string
      gapps:
        type: string
      root:
        type: string
      insider:
        type: string
jobs:
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ‚ôªÔ∏è
        uses: actions/checkout@v4

      - name: Setup Python üè≠
        uses: actions/setup-python@v4
        with:
          check-latest: true
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: scripts/

      - name: Setup Python3 Virtual Enviroment üêç
        working-directory: scripts
        run: |
          sudo apt-get update
          PYTHON_VENV_DIR="$(dirname "$PWD")/python3-env"
          python3 -m venv "$PYTHON_VENV_DIR" || abort "Failed to create python3 virtual env"
          # shellcheck disable=SC1091
          source "$PYTHON_VENV_DIR/bin/activate" || abort "Failed to activate python3 virtual env"
          python3 -c "import pkg_resources; pkg_resources.require(open('requirements.txt',mode='r'))" &>/dev/null || {
              echo "Installing Python3 dependencies"
              python3 -m pip install --upgrade -r requirements.txt || abort "Failed to install python3 dependencies"
          }
          deactivate

      - name: Install Ubuntu Dependencies üßë‚Äçüè≠
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: e2fsprogs attr unzip qemu-utils python3-venv
          version: 1.0

      - name: Build WSA ${{ inputs.arch }} with GApps ${{ inputs.root }} üèóÔ∏è
        id: wsa
        run: |
          if [[ -z "${{ inputs.insider }}" ]]; then
              RELEASE_TYPE="retail"
          else
              RELEASE_TYPE="latest"
          fi

          mkdir -p download
          ./scripts/build.sh --arch ${{ inputs.arch }} --release-type $RELEASE_TYPE --magisk-ver stable --gapps-brand ${{ inputs.gapps }} --root-sol ${{ inputs.root }} --custom-model redfin --remove-amazon --compress-format zip

      - name: Pass to Windows üí∏
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.wsa.outputs.artifact }}
          path: output

      - name: Prepare release tag üè∑Ô∏è
        id: date
        run: |
           if [[ -z "${{ inputs.insider }}" ]]; then
              echo "date=$(date +'v%Y-%m-%d')" >> $GITHUB_OUTPUT
           else
              echo "date=WSA-Insider-Version" >> $GITHUB_OUTPUT
           fi

    outputs:
      zipname: ${{ steps.wsa.outputs.artifact }}
      date: ${{ steps.date.outputs.date }}

  make-pri:
    name: Merge PRI resources
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout ‚ôªÔ∏è
        uses: actions/checkout@v4

      - name: Download built artifact ‚åõ
        uses: actions/download-artifact@v3
        with:
          path: output/
          name: ${{ needs.build.outputs.zipname }}

      - name: Merge language and density resources üßôüèª‚Äç‚ôÇÔ∏è
        run: (Start-Process powerhshell.exe -NoNewWindow -PassThru -Args "-ExecutionPolicy Bypass -File MakePri.ps1" -WorkingDirectory "${{ github.workspace }}\output\${{ needs.build.outputs.zipname }}").WaitForExit()

      - name: Compact Images üíø
        run: |
         foreach ($Partition in 'system','product','system_ext','vendor') {
             Write-Output "Optimizing of $Partition..."
             Write-Output "SELECT VDISK FILE=`"${{ github.workspace }}\output\${{ needs.build.outputs.zipname }}\$Partition.vhdx`"`
             ATTACH VDISK READONLY`
             COMPACT VDISK`
             DETACH VDISK" | Set-Content -Path "$Partition.txt" -Encoding Ascii
             Start-Process -NoNewWindow -Wait "diskpart.exe" -Args "/s $Partition.txt" -RedirectStandardOutput NUL
         }

      - name: Remove unused artifact ‚ùå
        uses: geekyeggo/delete-artifact@v2
        with:
          name: ${{ needs.build.outputs.zipname }}

      - name: Compress artifact üì¶
        run: 7z a -t7z ${{ needs.build.outputs.zipname }}.7z .\output\${{ needs.build.outputs.zipname }}\*

      - name: File Checksum ‚úîÔ∏è
        id: run
        run: ("hash=" + $(Get-FileHash -Path ${{ needs.build.outputs.zipname }}.7z -Algorithm SHA256).Hash.ToLower().ToString()) | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding UTF8 -Append

      - name: Update build to release ü§å
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ needs.build.outputs.zipname }}.7z
          fail_on_unmatched_files: true
          append_body: true
          tag_name: ${{ needs.build.outputs.date }}
          body: ${{ steps.run.outputs.hash }}  ${{ needs.build.outputs.zipname }}.7z

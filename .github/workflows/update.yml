name: Check update
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  check:
    name: Check update
    if: github.repository == 'YT-Advanced/WSA-Script'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ‚ôªÔ∏è
        uses: actions/checkout@v4

      - name: Install Dependencies üßë‚Äçüè≠
        run: |
          pip3 install requests packaging

      - name: Create branch if not found üèóÔ∏è
        run: |
          git checkout -f update || git switch --discard-changes --orphan update

      - name: Get app version ‚úÖ
        shell: python
        run: |
          import os
          import html
          import json
          import time
          import requests
          from xml.dom import minidom
          from packaging import version
          env_file = os.getenv('GITHUB_ENV')
          link = ""
          insider = ""
          print("Check WSA Retail Version")
          status = True
          while status:
            try:
              cookie_content = requests.get("https://raw.githubusercontent.com/YT-Advanced/WSA-Script/main/xml/GetCookie.xml").text.format("")
              response = requests.post("https://fe3.delivery.mp.microsoft.com/ClientWebService/client.asmx", data=cookie_content, headers={'Content-Type': 'application/soap+xml; charset=utf-8'})
              doc = minidom.parseString(response.text)
              cookie = doc.getElementsByTagName('EncryptedData')[0].firstChild.nodeValue
              catagory_id = "858014f3-3934-4abe-8078-4aa193e74ca8"
              catagory_id_content = requests.get("https://raw.githubusercontent.com/YT-Advanced/WSA-Script/main/xml/WUIDRequest.xml").text.format("", cookie, catagory_id, "retail")
              response = requests.post("https://fe3.delivery.mp.microsoft.com/ClientWebService/client.asmx", data=catagory_id_content, headers={'Content-Type': 'application/soap+xml; charset=utf-8'})
              doc = minidom.parseString(html.unescape(response.text))
              latestver = "0.0.0.0"
              for node in doc.getElementsByTagName('ExtendedUpdateInfo')[0].getElementsByTagName('Updates')[0].getElementsByTagName('Update'):
                node_xml = node.getElementsByTagName('Xml')[0]
                node_files = node_xml.getElementsByTagName('Files')
                if not node_files:
                    continue
                else:
                    for node_file in node_files[0].getElementsByTagName('File'):
                      if node_file.hasAttribute('InstallerSpecificIdentifier') and node_file.hasAttribute('FileName') and node_xml.getElementsByTagName('ExtendedProperties')[0].attributes['PackageIdentityName'].value == "MicrosoftCorporationII.WindowsSubsystemForAndroid":
                        tmpversion = node_file.attributes['InstallerSpecificIdentifier'].value.split('_')[1]
                        if version.parse(tmpversion) > version.parse(latestver):
                          latestver = tmpversion
              status = False
            except:
              print("Error, retrying in 5 seconds...")
              time.sleep(5)
              continue
          currentver = requests.get(f"https://raw.githubusercontent.com/YT-Advanced/WSA-Script/update/wsa.appversion").text
          latestver = latestver.replace('\n', '')
          currentver = currentver.replace('\n', '')
          build = False
          msg = ""
          if currentver != latestver:
            build = True
            msg="Update WSA Version from `v" + currentver + "` to `v" + latestver + "`"
          file = open('wsa.appversion', 'w')
          file.write(latestver)
          file.close()
          print("Check WSA Insider Version")
          currentver = requests.get(f"https://raw.githubusercontent.com/YT-Advanced/WSA-Script/update/WIF.appversion").text
          latestver = json.loads(requests.get(f"https://api.github.com/repos/bubbles-wow/WSA-Archive/releases/latest").content)['tag_name']
          latestver = latestver.replace('\n', '')
          currentver = currentver.replace('\n', '')
          if currentver != latestver:
            build = True
            insider = "yes"
            msg="Update WSA Insider Version from `v" + currentver + "` to `v" + latestver + "`"
          file = open('WIF.appversion', 'w')
          file.write(latestver)
          file.close()
          print("Check Magisk Stable Version")
          currentver = requests.get(f"https://raw.githubusercontent.com/YT-Advanced/WSA-Script/update/magisk.appversion").text
          latestver = json.loads(requests.get(f"https://github.com/topjohnwu/magisk-files/raw/master/stable.json").content)['magisk']['version']
          latestver = latestver.replace('\n', '')
          currentver = currentver.replace('\n', '')
          if currentver != latestver:
            build = True
            msg="Update Magisk Version from `v" + currentver + "` to `v" + latestver + "`"
          file = open('magisk.appversion', 'w')
          file.write(latestver)
          file.close()
          print("Check MindTheGapps Version")
          currentver = requests.get(f"https://raw.githubusercontent.com/YT-Advanced/WSA-Script/update/gapps.appversion").text
          latestver = json.loads(requests.get(f"https://api.github.com/repos/YT-Advanced/MindTheGappsBuilder/releases/latest").content)['name']
          latestver = latestver.replace('\n', '')
          currentver = currentver.replace('\n', '')
          if currentver != latestver:
            build = True
            msg="Update MindTheGapps Version from `v" + currentver + "` to `v" + latestver + "`"
          file = open('gapps.appversion', 'w')
          file.write(latestver)
          file.close()
          if (build):
            with open(env_file, "a") as wr:
              wr.write("SHOULD_BUILD=yes\nMSG=" + msg + "\nINSIDER=" + insider)
          else:
            with open(env_file, "a") as wr:
              wr.write("SHOULD_BUILD=no")
          

      - name: Update App version üîó
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        if: env.SHOULD_BUILD == 'yes'
        with:
          branch: update
          push_options: '--force'
          file_pattern: '*.appversion'
          commit_message: ${{ env.MSG }}
          create_branch: true

      - name: Prepare release tag üè∑Ô∏è
        if: env.SHOULD_BUILD == 'yes'
        id: date
        shell: bash
        run: |
           if [[ -z "${{ env.INSIDER }}" ]]; then
              echo "date=$(date +'v%Y-%m-%d')" >> $GITHUB_OUTPUT
              echo "prerls=false" >> $GITHUB_OUTPUT
           else
              echo "date=WSA-Insider-Version" >> $GITHUB_OUTPUT
              echo "prerls=true" >> $GITHUB_OUTPUT
            fi

      - name: Delete Tag (if exist) ‚ùå
        if: steps.date.outputs.date == 'WSA-Insider-Version'
        uses: dev-drprasad/delete-tag-and-release@v1.0.1
        with:
          tag_name: ${{ steps.date.outputs.date }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add text format to release üìù
        if: env.SHOULD_BUILD == 'yes'
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ steps.date.outputs.date }}
          body: "# Changelog\n## ${{ env.MSG }}\n### SHA256 Checksum\n```"
          prerelease: ${{ steps.date.outputs.prerls }}
          draft: false

      - name: Delete old workflow run ‚ùå
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
          delete_workflow_pattern: "Check update"

    outputs:
      SHOULD_BUILD: ${{ env.SHOULD_BUILD }}
      INSIDER_BUILD: ${{ env.INSIDER }}

  build:
    name: ${{ matrix.arch }}-${{ matrix.root }}-${{ matrix.gapps }}-${{ inputs.insider }} # 'insider' is 'yes' or 'no'
    strategy:
      matrix:
        arch: [x64, arm64]
        root: [magisk, kernelsu, none]
        gapps: [MindTheGapps, none]
    permissions: write-all
    needs: check
    uses: ./.github/workflows/build.yml
    if: needs.check.outputs.SHOULD_BUILD == 'yes'
    with:
      arch: ${{ matrix.arch }}
      gapps: ${{ matrix.gapps }}
      root: ${{ matrix.root }}
      insider: ${{ needs.check.outputs.INSIDER_BUILD }}
    secrets: inherit
